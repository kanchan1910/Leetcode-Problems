class Solution {
public:
    int fourSumCount(vector<int>& nums1, vector<int>& nums2, vector<int>& nums3, vector<int>& nums4)
    {
        int n1 = nums1.size();
        int n2 = nums2.size();
        int n3 = nums3.size();
        int n4 = nums4.size();
        int ans = 0;
        for(int i = 0; i < n1; i++)
        {
            for(int j = 0; j < n2; j++)
            {
                for(int k = 0; k < n3; k++)
                {
                    for(int l = 0; l < n4; l++)
                    {
                        if(nums1[i] + nums2[j] + nums3[k] + nums4[l] == 0)
                        {
                            ans++;
                        }
                    }
                }
            }
        }
        return ans;
    }
};
TLE
====================================
class Solution {
public:
    int fourSumCount(vector<int>& nums1, vector<int>& nums2, vector<int>& nums3, vector<int>& nums4)
    {
        int n1 = nums1.size();
        int n2 = nums2.size();
        int n3 = nums3.size();
        int n4 = nums4.size();
        int ans = 0;
        unordered_map<int, int>m;
        // a + b + c + d = 0
        // a + b = -(c + d)
        for(int i = 0; i < n1; i++)
        {
            for(int j = 0; j < n2; j++)
            {
                m[nums1[i] + nums2[j]]++;
            }
        }
        for(int i = 0; i < n3; i++)
        {
            for(int j = 0; j < n4; j++)
            {
                if(m.find(-( nums3[i] + nums4[j])) != m.end())
                {
                    ans += m[-( nums3[i] + nums4[j])];
                }
            }
        }
        return ans;
    }
};
