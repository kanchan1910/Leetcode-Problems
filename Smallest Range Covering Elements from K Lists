class Solution {
public:
    vector<int> smallestRange(vector<vector<int>>& nums) 
    {
        int min = INT_MAX, maxi = INT_MIN, range = INT_MAX;
        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>>pq;
        int n = nums.size();
        vector<int>index(n, 0);
        vector<int>sizes(n);
        for(int i = 0; i < n; i++)
        {
            sizes[i] = nums[i].size();
        }
        int ansmin, ansmax;
        for(int i = 0; i < n; i++)
        {
            pq.push({nums[i][0], i});
            maxi = max(maxi, nums[i][0]);
        }
        while(!pq.empty())
        {
            pair<int, int>p = pq.top();
            pq.pop();
            min = p.first;
            if(range > (maxi - min))
            {
                range = maxi - min;
                ansmin = min;
                ansmax = maxi;
            }
            if(index[p.second] == sizes[p.second] - 1)
            {
                break;
            }
            index[p.second]++;    
            pq.push({nums[p.second][index[p.second]], p.second});
            maxi = max(maxi, nums[p.second][index[p.second]]);
        }
        return {ansmin, ansmax};
    }
};
