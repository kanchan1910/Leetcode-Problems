class Solution {
public:
    int numPairsDivisibleBy60(vector<int>& time) 
    {
        // brute force
        int n = time.size();
        int ans = 0;
        for(int i = 0; i < n; i++)
        {
            for(int j = i + 1; j < n; j++)
            {
                int sum = time[i] + time[j];
                if(sum % 60 == 0)
                {
                    ans++;
                }
            }
        }
        return ans;
    }
};
tc o(n ^ 2) sc o(1)
// TLE

class Solution {
public:
    int numPairsDivisibleBy60(vector<int>& time) 
    {
        // efficient solution
        int n = time.size();
        int ans = 0;
        for(int i = 0; i < n; i++)
        {
            time[i] = time[i] % 60;
        }
        unordered_map<int, int>m;
        for(int i = 0; i < n; i++)
        {
            if(time[i] == 0)
            {
                ans += m[0];
            }
            else
            {
                ans += m[60 - time[i]];
            }
            m[time[i]]++;
        }
        return ans;
    }
};
tc o(n) sc o(n)
// ACCEPTED
