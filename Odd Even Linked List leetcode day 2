/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* oddEvenList(ListNode* head) 
    {
        if(head == NULL || head->next == NULL)
        {
            return head;
        }
        ListNode* e = head->next;
        ListNode* he = head->next;
        ListNode* o = head;
        ListNode* ho = head;
        ListNode* prev = o;
        while(o != NULL && e != NULL)
        {
            o->next = e->next;
            prev = o;
            o = o->next;
            // for even cases
            if(o != NULL)
            {
                e->next = o->next;
            }
            e = e->next;
        }
        if(o != NULL)
        {
            o->next = he;
        }
        else
        {
            // for even cases
            prev->next = he;
        }
        return ho;
    }
};
tc o(n) sc o(1)
