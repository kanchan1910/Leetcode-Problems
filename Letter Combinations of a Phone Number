class Solution {
public:
    map<int, string>m = 
    {
        {2, "abc"},
        {3, "def"},
        {4, "ghi"},
        {5, "jkl"},
        {6, "mno"},
        {7, "pqrs"},
        {8, "tuv"},
        {9, "wxyz"}
    };
    void fun(string &digits, vector<string>& ans, int index, int &n, string str)
    {
        if(index == n)
        {
            ans.push_back(str);
            return;
        }
        for(int i = 0; i < m[digits[index] - '0'].length(); i++)
        {
            str += m[digits[index] - '0'][i];
            fun(digits, ans, index + 1, n, str);
            str.pop_back();
        }
    }
    vector<string> letterCombinations(string digits) 
    {
        int n = digits.length();
        vector<string>ans;
        if(n == 0)
        {
            return ans;
        }
        fun(digits, ans, 0, n, "");
        return ans;
    }
};
