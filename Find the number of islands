void fun(vector<vector<char>>& grid, int n, int m, vector<vector<bool>>& vis, int i, int j)
    {
        if(i < 0 || j < 0 || i >= n || j >= m || vis[i][j] == true || grid[i][j] == '0')
        {
            return;
        }
        vis[i][j] = true;
        fun(grid, n, m, vis, i, j - 1);
        fun(grid, n, m, vis, i, j + 1);
        fun(grid, n, m, vis, i + 1, j);
        fun(grid, n, m, vis, i - 1, j);
        fun(grid, n, m, vis, i - 1, j - 1);
        fun(grid, n, m, vis, i - 1, j + 1);
        fun(grid, n, m, vis, i + 1, j - 1);
        fun(grid, n, m, vis, i + 1, j + 1);
    }
    int numIslands(vector<vector<char>>& grid) 
    {
        int n = grid.size();
        int m = grid[0].size();
        int ans = 0;
        vector<vector<bool>>vis(n, vector<bool>(m, false));
        for(int i = 0; i < n; i++)
        {
            for(int j = 0; j < m; j++)
            {
                if(grid[i][j] == '1' && vis[i][j] == false)
                {
                    ans++;
                    fun(grid, n, m, vis, i, j);
                }
            }
        }
        return ans;
    }
