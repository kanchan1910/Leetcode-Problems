class Solution {
public:
    int pivotIndex(vector<int>& nums) 
    {
        int n = nums.size();
        vector<int>left(n, 0);
        vector<int>right(n, 0);
        left[0] = nums[0];
        for(int i = 1; i < n; i++)
        {
            left[i] += nums[i] + left[i - 1];
        }
        right[n - 1] = nums[n - 1];
        for(int i = n - 2; i >= 0; i--)
        {
            right[i] += nums[i] + right[i + 1];
        }
        int index = -1;
        for(int i = 0; i < n; i++)
        {
            if(i == 0)
            {
                if(right[i + 1] == 0)
                {
                    index = i;
                    break;
                }
            }
            else if(i == n - 1)
            {
                if(left[i - 1] == 0)
                {
                    index = i;
                    break;
                }
            }
            else
            {
                if(left[i - 1] == right[i + 1])
                {
                    index = i;
                    break;
                }
            }
        }
        return index;
    }
};
