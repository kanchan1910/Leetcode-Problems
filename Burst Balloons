class Solution {
public:
    // refer https://youtu.be/VFskby7lUbw
    // tc o(n ^ 3)
    // sc o(n ^ 2)
    // without dp tc o(n! * n)
    int fun(vector<int>& nums, vector<vector<int>>& dp, int l, int r)
    {
        if(l > r)
        {
            return 0;
        }
        if(dp[l][r] != -1)
        {
            return dp[l][r];
        }
        for(int i = l; i <= r; i++)
        {
            dp[l][r] = max(dp[l][r], nums[i] * nums[l - 1] * nums[r + 1] + fun(nums, dp, l, i - 1) + fun(nums, dp, i + 1, r)); 
        }
        return dp[l][r];
    }
    int maxCoins(vector<int>& nums)
    {
        nums.push_back(1);
        nums.insert(nums.begin(), 1);
        int n = nums.size();
        vector<vector<int>>dp(n, vector<int>(n, -1));
        return fun(nums, dp, 1, n - 2);
    }
};


