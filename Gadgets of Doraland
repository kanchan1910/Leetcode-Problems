vector<int> TopK(vector<int>& arr, int k)
    {
        vector<int>ans;
        // id, frequency
        unordered_map<int, int>m;
        int n = arr.size();
        for(int i = 0; i < n; i++)
        {
            m[arr[i]]++;
        }
        // frequency, id
        // if same frequency then will be sorted on the basis of id 
        priority_queue<pair<int, int>>pq;
        for(auto x: m)
        {
            pq.push({x.second, x.first});
        }
        while(k--)
        {
            ans.push_back(pq.top().second);
            pq.pop();
        }
        return ans;
        
    }
