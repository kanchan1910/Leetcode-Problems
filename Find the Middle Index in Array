class Solution {
public:
    int findMiddleIndex(vector<int>& nums) 
    {
        int n = nums.size();
        if(n == 1)
        {
            return 0;
        }
        vector<int>left(n);
        vector<int>right(n);
        left[0] = nums[0];
        for(int i = 1; i < n; i++)
        {
            left[i] += left[i - 1] + nums[i];
        }
        right[n - 1] = nums[n - 1];
        for(int i = n - 2; i >= 0; i--)
        {
            right[i] += right[i + 1] + nums[i];
        }
        for(int i = 0; i < n; i++)
        {
            if(i == 0)
            {
                if(right[1] == 0)
                {
                    return 0;
                }
            }
            else if(i > 0 && i < n - 1)
            {
                if(left[i - 1] == right[i + 1])
                {
                    return i;
                }
            }
            else if(i == n - 1)
            {
                if(left[n - 2] == 0)
                {
                    return n - 1;
                }
            }
        }
        return -1;
    }
};
tc o(n) sc o(n)
