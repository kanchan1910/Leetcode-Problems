class Solution {
public:
    int bs(vector<int>& nums, int target)
    {
        int l = 0, r = nums.size() - 1, ans = -1;
        int mid;
        while(l <= r)
        {
            mid = (l + r) / 2;
            if(nums[mid] == target)
            {
                return mid + 1;
            }
            else if(nums[mid] < target)
            {
                l = mid + 1;
                ans = mid + 1;
            }
            else if(nums[mid] > target)
            {
                r = mid - 1;
            }
        }
        return ans;
    }  
    vector<int> answerQueries(vector<int>& nums, vector<int>& queries)
    {
        vector<int>ans;
        sort(nums.begin(), nums.end());
        for(int i = 1; i < nums.size(); i++)
        {
            nums[i] += nums[i - 1];
        }
        for(int i = 0; i < queries.size(); i++)
        {
            int val = bs(nums, queries[i]);
            if(val == -1)
            {
                ans.push_back(0);
            }
            else
            {
                ans.push_back(val);
            }
        }
        return ans;
    }
};

