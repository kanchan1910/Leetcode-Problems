class Solution {
public:
    vector<vector<string>> mostPopularCreator(vector<string>& creators, vector<string>& ids, vector<int>& views) 
    {
        unordered_map<string, pair<string, pair<long long, long long>>>m;
        for(int i = 0; i < views.size(); i++)
        {

            if(m.empty())
            {
                pair<string, pair<long long, long long>>p;
                p.first = ids[i];
                p.second.first = views[i];
                p.second.second = views[i];
                m[creators[i]]  = p;
            }
            else
            {
                if(m.find(creators[i]) == m.end())
                {
                    pair<string, pair<long long, long long>>p;
                    p.first = ids[i];
                    p.second.first = views[i];
                    p.second.second = views[i];
                    m[creators[i]] = p;
                }
                else
                {
                    pair<string, pair<long long, long long>>pp = m[creators[i]];
                    if(pp.second.first < views[i])
                    {
                        pp.first = ids[i];
                        pp.second.first = views[i];
                    }
                    else if(pp.second.first == views[i])
                    {
                        if(pp.first > ids[i])
                        {
                            pp.first = ids[i];
                        }
                    }
                    pp.second.second += views[i];
                    m[creators[i]] = pp;
                }
            }
        }
        long long max_views = 0;
        for(auto x: m)
        {
            if(max_views < x.second.second.second)
            {
                max_views = x.second.second.second;
            }
        }
        vector<string>highest_views_creaters;
        for(auto x: m)
        {
            if( x.second.second.second == max_views)
            {
                highest_views_creaters.push_back(x.first);
            }
        }
        vector<vector<string>>ans;
        for(int i = 0; i < highest_views_creaters.size(); i++)
        {
            ans.push_back({highest_views_creaters[i], m[highest_views_creaters[i]].first});
        }
        return ans;
    }
};

